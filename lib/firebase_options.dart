// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        return macos;
      case TargetPlatform.windows:
        return windows;
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static const FirebaseOptions web = FirebaseOptions(
    apiKey: 'xxxxxxxxxxxxxxxxxxxxxxxxxxxx',
    appId: '1:xxxxxxxxxxxxxxxxxxxxxxxxxxxx',
    messagingSenderId: '755627002063',
    projectId: 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx',
    authDomain: 'xxxxxxxxxxxxxxxxxxxxxxxxxxxx',
    databaseURL:
        'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx',
    storageBucket: 'registre-a4b9e.appspot.com',
    measurementId: 'G-VF3K2TV5YV',
  );

  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'AIzaSyDuOmUQllqN1xZbiwieEbiye6YRjVbgnxg',
    appId: '1:755627002063:android:3463b5a2f3e4eac2024fba',
    messagingSenderId: '755627002063',
    projectId: 'registre-a4b9e',
    databaseURL:
        'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx',
    storageBucket: 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx',
  );

  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: 'xxxxxxxxxxxxxxxxxxxxxxxxxx',
    appId: '1:755627002063:ios:3547628585f6e460024fba',
    messagingSenderId: 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx',
    projectId: 'registre-a4b9e',
    databaseURL:
        'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx',
    storageBucket: 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx',
    iosBundleId: 'com.example.rescoff',
  );

  static const FirebaseOptions macos = FirebaseOptions(
    apiKey: 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx',
    appId: '1:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx',
    messagingSenderId: 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx',
    projectId: 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx',
    databaseURL:
        'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx',
    storageBucket: 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx',
    iosBundleId: 'com.example.rescoff',
  );

  static const FirebaseOptions windows = FirebaseOptions(
    apiKey: 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx',
    appId: 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx',
    messagingSenderId: '7xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx',
    projectId: 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxe',
    authDomain: 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx',
    databaseURL:
        'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx',
    storageBucket: 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx',
    measurementId: 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx',
  );
}
